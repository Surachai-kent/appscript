#!/usr/bin/env python

import sys
from os.path import expanduser
from getopt import getopt
from appscript import *

_help = """osascangui help

Scan an application's GUI interface structure using GUI Scripting.

    osascangui [-m=max-depth] process-name

Example:

    osascangui  -m=5  TextEdit
    
Notes: 
- Process names are case sensitive!

- Process names are usually (though not always) the same as the 
  application's file name without the '.app' suffix.

- Default max-depth is 3.

- Deep scans of apps with large, complex GUIs may take a while.

- GUI Scripting must be enabled before use.
"""

def scanelements(ref, maxdepth=3, indent=0):
	if indent > maxdepth:
		if ref.count()>0: 
			print '%s...' % ('    '*indent)
		return
	for class_, name, elementref in zip(ref.class_(), ref.name(), ref()):
		classname = repr(class_)
		if classname.startswith('aem.'):
			classname = classname[4:]
		else: # startswith 'k.'
			classname = classname[2:]
		print '%s%s: %r' % ('    '*indent, classname, name)
		scanelements(elementref.UI_elements, maxdepth, indent+1)



if len(sys.argv) < 2:
	print _help
else:
	opts, args = getopt(sys.argv[1:], 'm:')
	appname = unicode(args[0], 'utf8')
	if opts:
		maxdepth = int(opts[0][1])
	else:
		maxdepth = 3
	
	app(appname).activate()
	try:
		process = app('System Events').processes[appname]()
	except:
		print >> sys.stderr, "Can't find a process named %r." % appname
	else:
		scanelements(process.UI_elements, maxdepth)