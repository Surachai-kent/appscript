TO DO

- finish osadictionary implementation

- osadictionary.Element needs a method for determining if accessor forms are known or inferred

- finish manuals

- add functions for escaping/formatting AE codes as ASCII/identifiers to makeidentifier

- move quickdoc shell code into /usr/local/bin/osadoc, or combine into osadict

- note that OSACopyScriptingDefinition will omit hidden class and command definitions (bug id 4677156)

- anything else

- wonder if we should provide default appscript definitions for text, character, word, paragraph and other keywords that may be omitted from dictionary, but only pull them in when actually needed?

- note that TextWrangler's Text Suite has dodgy definitions (properties and elements are listed under plural, not singular, definitions; there's no singular form for the 'text' class so aeteparser won't recognise it)

- re. node visibility, maybe use enum {kVisible, kHidden, kLimited} instead of bool, where kLimited = node that doesn't have its own hidden flag set but lies within another node that does, so may be visible in limited circumstances. That way, classes/enums in tpnm suite could still be treated as visible within certain contexts (e.g. property/parameter types) while not appearing in others (e.g. collapsed class definitions). 

Note that dom.aeteparser has temporary patches to partially work around this issue for now (e.g. 'owner privileges' properties type appears in htmldoc output, even though its an Enumeration defined in tpnm suite and therefore marked as hidden by parser).

- make sure non-ASCII chars in sdef 'code' attributes are properly converted (probably needs to go from UTF8/Unicode to either MacRoman or host's primary encoding [hopefully not the latter though, as that will cause trouble with multi-byte encodings like MacJapanese])