TO DO

============================ aem ============================

	typeFileURL = 'furl'
	typeUTF8Text = 'utf8'
	typeUTF16ExternalRepresentation = 'ut16'

- following should work but doesn't:

	Application('/System/Library/CoreServices/Finder.app').event('coregetd', {'----': app.elements('pcap')}).send()
	# aem.send.send.CommandError: CommandError -1799: Mac OS error code -1799

(Might be related to keyAddressAttr/keyOriginalAddressAttr, as appscript packs these attributes differently to AppleScript.)


- Any other Python/AE type/class unpack routines needed? (See [e.g.] AEDataModel.h) e.g.:

	- typeDecimalStruct ? # preferred

	- typeExtended ? Float80; coerce to type128BitFloatingPoint and decode that? # non-preferred
	- typeAEText ?
	- typeTextStyles


- find a way to avoid GUI process starting when running from python2.4/python2.5; calling Process Manager functions (GetNextEvent, GetProcessBundleLocation, LaunchApplication) seems to trigger this. e.g. Might be BSD APIs that could be used instead, in which case could use AEAddressDescs of typeKernelProcessID ('kpid')


- in CommandError, extract and report any kOSA... error parameters, if present


- ae.AEGetEventHandler, ae.AEGetCoercionHandler functions will crash when getting C-based callbacks


----------------------------------------------------------------------
Following will probably be rejected as too hard or not important enough to do:


- support for default 'open' events (i.e. where aevtodoc event is passed via LaunchApplication)


- Following examples should evaluate as True:

print its.ne(3) == its.eq(3).NOT
print its == its.eq(True)

(Solution would be to resolve both [e.g. into simple lists?] and compare the resolved versions which should both share the same form.)


============================ appscript ============================

- How should terminology module handle malformed aetes? Ignore them? Raise proper error (except for zero-length aetes, which AS seems to ignore)?


- Relaunching an application immediately after quitting it often results in an invalid connection error (-609) as LaunchApplication is being called before the application has actually quit. Not sure if there's a practical solution to this - users may just have to live with it.


- Introspection support. Users should be able to examine both references' structure and obtain terminology for the referenced properties and elements.


- More tests.


- See modules for additional TO DO/TO CHECK/TO DECIDE comments.


- expose classes for typechecking purposes as necessary


- Allow multiple instances of same application to be launched and/or controlled. (Currently clients can launch new instances themselves, then create Application objects using their PIDs.)


============================ mactypes ============================

- make comparisons more robust; make hashes smarter (if possible)


============================ osax ============================

- full 64-bit support

- rename ScriptingAddition class to OSAX, OR add 'osax' function as shortcut as-per rb-appscript

============================ misc ============================

- all identifiers should follow PEP 8
