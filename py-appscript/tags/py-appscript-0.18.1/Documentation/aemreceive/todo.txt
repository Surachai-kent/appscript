TO DO

- any other coercions to install as standard (e.g. unicode to int, real)

- handle incoming events' send flags? (If so, How?)

- maybe create a Python code generator that parses an sdef and generates all the installeventhandler() code automatically for convenience (note: generated code could be in the form of a separate module that's included in application bundle and imported into the main module, rather than pasting directly into main module)

- allow callbacks to specify an optional 'parameters' parameter that will receive a dict containing all unknown params? (Q. should these be automatically unpacked as-is, or left to client to unpack as desired?)

- allow individual event attributes to be specified as callback arguments, e.g.:

	installeventhandler(callbackfunction,
			'evntcode',
			(kAE.keyDirectObject, 'param', ...), # parameter
			(kOSA.keySubjectAttr, 'subject', ...), # attribute
			)


----------------------------------------------------------------------
Following will probably be rejected as too hard or not important enough to do:

- geteventhandler & getcoercionhandler function # users are unlikely to need these

- allow lower-level event handlers to be installed, e.g. to allow request and reply events to be forwarded to OSADoEvent() in an applet shell # users can just use CarbonX.AE directly for this

- better handling of return values? (e.g. check return types match type specified in [terminology] definition) # think it should be left to developer to return correct type(s)

- add convenience installrunhandler, installopenhandler, installreopenhandler, installquithandler functions? (An installidlehandler would be nice, but problematic unless CarbonEvt grows support for Carbon timers.)