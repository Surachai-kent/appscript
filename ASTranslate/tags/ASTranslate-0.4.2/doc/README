ASTranslate

-----------------------------------
ABOUT

A simple tool for converting application commands written in AppleScript into their appscript equivalent.

Usage:

1. Launch ASTranslate and type or paste one or more AppleScript commands into the top half of the window, e.g.:

	tell application "TextEdit" to get text of every document

	with timeout of 10 seconds		tell application "Finder" to folder 1 of home as alias	end timeout

2. Select Document > Translate. The AppleScript code is compiled and executed, and the bottom pane displays each Apple event sent by AppleScript as appscript code, e.g.:

	app(u'TextEdit').documents.text.get()

	app(u'Finder').home.folders[1].get(resulttype=k.alias, timeout=10)

Click on the tabs below the bottom pane to switch between Python, Ruby and ObjC translations. 

The 'Send events to app' checkbox can be unchecked to prevent Apple events being sent to the target application. This is particularly useful when obtaining translations of potentially destructive commands such as 'delete'.

-----------------------------------
NOTES

- ASTranslate only sniffs outgoing Apple events sent by AppleScript; it's not a full-blown AppleScript->Python/Ruby/ObjC code converter or anything like that. The output is fairly dumb, but is handy when figuring out how to translate a particular reference or command from AppleScript to Python/Ruby/ObjC.

- The objc-appscript renderer creates two-letter class name prefixes based on the application name for demonstration purposes. If using ASTranslate-generated code in your own projects, remember to modify these prefixes to match the names generated by osaglue, or vice-versa.

- If the 'Send events to app' option is checked, remember that all Apple events sent by AppleScript will be passed to applications to be handled as normal. i.e. Destructive commands (e.g. 'tell "Finder" to delete some file') will still do their destructive thing; invalid or unsuccessful commands will cause AppleScript to raise an error, etc.

- Unchecking the 'Send events to app' option also prevents an application command from returning a result; if the following AppleScript code expects a return value, this will likely result in a script error.

- Source code is available via svn; see <http://appscript.sourceforge.net>.
