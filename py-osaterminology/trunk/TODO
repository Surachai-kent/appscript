TO DO

- fix keyword escaping in dom.sdefparser module; see dom.aeteparser for reference. (i.e. When making type, reference tables, need to check against all default definitions before adding trailing underscores. e.g. AI has a 'rotation' property with different code to built-in 'rotation' type definition; currently, keyword has a trailing underscore but property doesn't.)

- finish osadictionary implementation

- osadictionary.Element needs a method for determining if accessor forms are known or inferred

- add functions for escaping/formatting AE codes as ASCII/identifiers to makeidentifier

- note that OSACopyScriptingDefinition will omit hidden class and command definitions (bug id 4677156)

- anything else

- wonder if we should provide default appscript definitions for text, character, word, paragraph and other keywords that may be omitted from dictionary, but only pull them in when actually needed?

- note that TextWrangler's Text Suite has dodgy definitions (properties and elements are listed under plural, not singular, definitions; there's no singular form for the 'text' class so aeteparser won't recognise it)

- re. node visibility, maybe use enum {kVisible, kHidden, kLimited} instead of bool, where kLimited = node that doesn't have its own hidden flag set but lies within another node that does, so may be visible in limited circumstances. That way, classes/enums in tpnm suite could still be treated as visible within certain contexts (e.g. property/parameter types) while not appearing in others (e.g. collapsed class definitions). 

Note that dom.aeteparser has temporary patches to partially work around this issue for now (e.g. 'owner privileges' properties type appears in htmldoc output, even though its an Enumeration defined in tpnm suite and therefore marked as hidden by parser).



